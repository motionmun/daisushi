import asyncio
from aiogram import Bot, Dispatcher, types, Router
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# === –í–°–¢–ê–í–¨ –°–í–û–ô –¢–û–ö–ï–ù –í–ú–ï–°–¢–û –≠–¢–û–ì–û! ===
TOKEN = "7991217059:AAElJ8pA2grFQ_6cyEgl2gus-Td4rFjKPNg"

# === –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä ===
bot = Bot(token=TOKEN)
dp = Dispatcher()
router = Router()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º Router –¥–ª—è Aiogram 3.x

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìú –ú–µ–Ω—é"), KeyboardButton(text="üõí –ö–æ—Ä–∑–∏–Ω–∞")]
    ],
    resize_keyboard=True
)

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start ===
@router.message(lambda message: message.text == "/start")
async def send_welcome(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Dai Sushi üç£\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=menu_keyboard)

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üìú –ú–µ–Ω—é" ===
@router.message(lambda message: message.text == "üìú –ú–µ–Ω—é")
async def show_menu(message: types.Message):
    await message.answer("–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ —Å—É—à–∏ –∏ —Ä–æ–ª–ª–æ–≤ üç£")

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üõí –ö–æ—Ä–∑–∏–Ω–∞" ===
@router.message(lambda message: message.text == "üõí –ö–æ—Ä–∑–∏–Ω–∞")
async def show_cart(message: types.Message):
    await message.answer("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫–∞ –ø—É—Å—Ç–∞ üõí")

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
async def main():
    try:
        dp.include_router(router)
        await dp.start_polling(bot)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())
